version: "3"
services:

  postgre:
    image: postgres:10.5
    container_name: postgre_velocity
    volumes:
    - ./postgre/postgre-init/:/docker-entrypoint-initdb.d/
    - ./postgre/postgre-data/:/var/lib/postgresql/data/
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
    - 5432:5432

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager_velocity
    volumes:
    - ./alertmanager/:/etc/alertmanager/
    command:
    - '--config.file=/etc/alertmanager/config.yml'
    - '--storage.path=/alertmanager'
    environment:
      SLACK_API_URL: "${SLACK_API_URL}"
    ports:
    - 9093:9093

  prometheus:
    image: prom/prometheus
    container_name: prometheus_velocity
    volumes:
    - ./prometheus/:/etc/prometheus/
    - ./prometheus/prometheus-data/:/prometheus
    command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--storage.tsdb.path=/prometheus'
    - '--web.console.libraries=/usr/share/prometheus/console_libraries'
    - '--web.console.templates=/usr/share/prometheus/consoles'
    - '--web.enable-lifecycle'
    ports:
    - 9090:9090

  grafana:
    image: grafana/grafana
    container_name: grafana_velocity
    ports:
    - 3000:3000

  velocity:
    image: openjdk:8
    volumes:
    - ./velocity/:/usr/src/velocity/
    ports:
    - 8000:8000
    depends_on:
    - postgre
    environment:
      JCDECAUX_API_KEY: "${JCDECAUX_API_KEY}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    command: >
      /bin/bash -c "
          sleep 5;
          java -jar /usr/src/velocity/${APP_NAME}-${APP_VERSION}.jar;
      "